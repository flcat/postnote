package com.flcat.postnote;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.database.Cursor;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.Color;import android.location.Address;import android.location.Geocoder;import android.net.Uri;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import java.io.IOException;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;import java.util.List;import java.util.Locale;public class DetailActivity extends Activity {    String email;    String num,title,content,date,mUri,mThumbUri;    String lat,lng;    Bitmap bitmap;    double dlat,dlng;    private TextView tv1,tv2,tv3;    private ImageView iv;    private List<ListViewItem> items_current;    //final int pos = intent.getIntExtra("pos",0);    //디테일 모드    String mode;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        Log.e("DetailActivity", "온크리에이트");        setContentView(R.layout.activity_detail);        //전달된 인텐트 데이터 처리        Intent intent = getIntent();        tv1 = (TextView) findViewById(R.id.view_title);        tv2 = (TextView) findViewById(R.id.view_memo);        tv3 = (TextView) findViewById(R.id.adress_textview);        iv = (ImageView)findViewById(R.id.detail_img1);        iv.setScaleType(ImageView.ScaleType.FIT_XY);                num = intent.getStringExtra("num");                title = intent.getStringExtra("title");                content = intent.getStringExtra("content");                mUri = intent.getStringExtra("mUri");                mThumbUri = intent.getStringExtra("mThumbUri");                lat = intent.getStringExtra("lat");                lng = intent.getStringExtra("lng");                Log.e("DetailActivity_좌표",lat+"/"+lng);                //                if((lat != null && lng != null) || (lat != "" && lng != "")) {                    dlat = Double.parseDouble(lat);                    dlng = Double.parseDouble(lng);                }                Log.e("확인",title+"/"+mUri);                tv1.setText(title);                tv2.setText(content);                tv3.setText(getAddress(getApplicationContext(),dlat,dlng));                if(mUri != null && mUri != "" && mUri.length() > 5 ) {                    Thread mThread = new Thread(){                        @Override                        public void run() {                            try {                                URL url = new URL(mUri);                                HttpURLConnection conn = (HttpURLConnection) url.openConnection();                                conn.setDoInput(true);                                conn.connect();                                InputStream is = conn.getInputStream();                                bitmap = BitmapFactory.decodeStream(is);                            } catch (MalformedURLException e) {                                e.printStackTrace();                            } catch (IOException e) {                                e.printStackTrace();                            }                        }                    };                    mThread.start();                    try{                        mThread.join();                        iv.setImageBitmap(bitmap);                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                }            findViewById(R.id.view_title).setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                }            });            findViewById(R.id.view_memo).setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                }            });            findViewById(R.id.update_btn).setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    Intent intent = new Intent(getApplicationContext(), UpdateActivity.class);                    intent.putExtra("mode", "modify");                    intent.putExtra("num",num);                    intent.putExtra("title", title);                    intent.putExtra("content", content);                    intent.putExtra("mUri",mUri);                    intent.putExtra("mThumbUri",mThumbUri);                    intent.putExtra("lat",lat);                    intent.putExtra("lng",lng);                    DetailActivity.this.startActivity(intent);                }            });        }    //위도경도 > 주소 지오코드    public static String getAddress(Context mContext, double lat, double lng) {        String nowAddress ="현재 위치를 확인 할 수 없습니다.";        Geocoder geocoder = new Geocoder(mContext, Locale.KOREA);        List <Address> address;        try {            if (geocoder != null) {                //세번째 파라미터는 좌표에 대해 주소를 리턴 받는 갯수로                //한좌표에 대해 두개이상의 이름이 존재할수있기에 주소배열을 리턴받기 위해 최대갯수 설정                address = geocoder.getFromLocation(lat, lng, 1);                if (address != null && address.size() > 0) {                    // 주소 받아오기                    String currentLocationAddress = address.get(0).getAddressLine(0).toString();                    nowAddress  = currentLocationAddress;                }            }        } catch (IOException e) {            Toast.makeText(mContext, "주소를 가져 올 수 없습니다.", Toast.LENGTH_LONG).show();            e.printStackTrace();        }        return nowAddress;    }    @Override    protected void onPause() {        super.onPause();    }    @Override    protected void onResume() {        super.onResume();    }    @Override    protected void onUserLeaveHint() {        super.onUserLeaveHint();    }    @Override    protected void onStop() {        super.onStop();    }    @Override    protected void onRestart() {        super.onRestart();    }    @Override    protected void onDestroy() {        super.onDestroy();    }}